// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // Put your code here:
    // 0 - 16,383 is RAM memory, 16,383 = 0011111111111111 14 ones
    // 16,384 - 24,575 is SCREEN Memory 24,575 = 0101111111111111
    // 24,576 is KEYBOARD map 24,576 = 0110000000000000
    // Greater than 24,577 is ignored

    DMux (in=load, sel=address[14], a=LoadRAM, b=SCREENKEYBOARD); // The 14th bit determines whether it is a RAM or SCREEN/KEYBOARD address
    Mux (a=SCREENKEYBOARD, b=false, sel=address[13], out=LoadSCREEN); // The 13th bit determines whether it is SCREEN or KEYBOARD
	RAM16K (in=in, load=LoadRAM, address=address[0..13], out=RAM0out);
	Screen (in=in, load=LoadSCREEN, address=address[0..12], out=SCREENout);
	Keyboard (out=KEYBOARDout);


	// Read From Address
    Mux4Way16 (a=RAM0out, b=RAM0out, c=SCREENout, d=KEYBOARDout, sel=address[13..14], out=out); // the combo of 13 and 14 determine what to output 00 and 01 are RAM output, 10 is Screen, 11 is Keyboard
}