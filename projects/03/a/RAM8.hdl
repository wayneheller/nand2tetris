// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:

    // Load
    DMux8Way (in=load, sel=address, a=LoadReg0, b=LoadReg1, c=LoadReg2, d=LoadReg3, e=LoadReg4, f=LoadReg5, g=LoadReg6, h=LoadReg7);
    Register (in=in, load=LoadReg0, out=Reg0out);
    Register (in=in, load=LoadReg1, out=Reg1out);
    Register (in=in, load=LoadReg2, out=Reg2out);
    Register (in=in, load=LoadReg3, out=Reg3out);
    Register (in=in, load=LoadReg4, out=Reg4out);
    Register (in=in, load=LoadReg5, out=Reg5out);
    Register (in=in, load=LoadReg6, out=Reg6out);
    Register (in=in, load=LoadReg7, out=Reg7out);

    
    // Read From Address
    Mux8Way16 (a=Reg0out, b=Reg1out, c=Reg2out, d=Reg3out, e=Reg4out, f=Reg5out, g=Reg6out, h=Reg7out, sel=address, out=out);
}